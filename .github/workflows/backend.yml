name: Backend CI/CD

on:
  workflow_call:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/chat-app-backend:${{ github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        working-directory: ./server
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.IMAGE_NAME }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
          
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt update
              sudo apt install apt-transport-https ca-certificates curl software-properties-common -y
              sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
              echo "deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \$(. /etc/os-release && echo "\$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            else
              echo "Docker already installed"
            fi

            export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            export TAG=${{ github.ref_name }}
            export REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}
            export CLIENT_URL=${{ secrets.CLIENT_URL }}
            
            sudo docker pull ${{ env.IMAGE_NAME }}
            
            # Khởi động lại toàn bộ stack
            cd $DOCKER_COMPOSE_DIR
            sudo docker-compose -f docker-compose.prod.yml down
            sudo docker-compose -f docker-compose.prod.yml up -d
